
<#
.SYNOPSIS
    This script is checking if the hotfix for CVE-2020-0601 is applied and if there is/was an attack.

.DESCRIPTION
    This script is checking if the hotfix for CVE-2020-0601 is applied according to your Windows version.
    Furthermore it checks if there is a attempt to exploit the known vulnerability.
    
    All the information can be found here:
    https://msrc-blog.microsoft.com/2020/01/14/january-2020-security-updates:-cve-2020-0601/

.EXAMPLE
    PS C:\PSScript > .\CheckForCVE-2020-0601Hotfix.ps1

    The script does not need any parameters.

.INPUTS
    None

.OUTPUTS
    This script fires some text in console...

.NOTES
    AUTHOR:          @MarkusZehnle
    CREATION DATE:   2020-01-17
    VERSION:         1.1

    CHANGELOG:       v1.0 / 2020-01-17 / @MarkusZehnle:
                     - Initial script development

                     v1.1 / 2020-01-17 / Matthias Faeth:
                     - Code optimization and testing
#>

Write-Output "$(Get-Date): We are going to check the system for the hotfix regarding CVE-2020-0601..."
Write-Output "$(Get-Date):"
Write-Output "$(Get-Date): Checking Windows build:"
# Get the Windows build
$winbuild = ([System.Environment]::OSVersion.Version).Build
Write-Output "$(Get-Date): Congrats, seems you have $winbuild"
Write-Output "$(Get-Date):"
<#
# Creating a little overview which OS Build is needing which HotFixID
#
# Based on:
# https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0601
#
#
# Product                                                       OS-Builds                   HotfixID
# ----------------------------------------------------------------------------------------------------
# Windows 10 for 32-/64-bit Systems                             10240.18453                 KB4534306
# Windows 10 Version 1607 for 32-/64-bit Systems                14393.3443                  KB4534271
# Windows 10 Version 1709 for 32-/64-bit + ARM64 Systems        16299.1625                  KB4534276
# Windows 10 Version 1803 for 32-/64-bit + ARM64 Systems        17134.1246                  KB4534293
# Windows 10 Version 1809 for 32-/64-bit + ARM64 Systems        17763.973                   KB4534273
# Windows 10 Version 1903/1909 for 32-/64-bit + ARM64 Systems   18362.592 and 18363.592     KB4528760
# Windows Server 2016 + Windows Server 2016 Core                14393.3443                  KB4534271
# Windows Server 2019 + Windows Server 2019 Core                17763.973                   KB4534273
# Windows Server, version 1803 (Server Core Installation)       17134.1246                  KB4534293
# Windows Server, version 1903/1909 (Server Core installation)  18362.592 and 18363.592     KB4528760
#>

# Windows 10 for 32-/64-bit Systems
If ($winbuild -eq "10240") {

    $hotfixid = "KB4534306"
}

# Windows 10 Version 1607 for 32-/64-bit Systems
# Windows Server 2016 + Windows Server 2016 Core 
If ($winbuild -eq "14393") {

    $hotfixid = "KB4534271"
}

# Windows 10 Version 1709 for 32-/64-bit + ARM64 Systems
If ($winbuild -eq "16299") {

    $hotfixid = "KB4534276"
}

# Windows 10 Version 1803 for 32-/64-bit + ARM64 Systems
# Windows Server, version 1803 (Server Core Installation)
If ($winbuild -eq "17134") {

    $hotfixid = "KB4534293"
}

# Windows 10 Version 1809 for 32-/64-bit + ARM64 Systems 
# Windows Server 2019 + Windows Server 2019 Core 
If ($winbuild -eq "17763") {

    $hotfixid = "KB4534273"
}

# Windows 10 Version 1903/1909 for 32-/64-bit + ARM64 Systems
# Windows Server, version 1903/1909 (Server Core installation)
If (($winbuild -eq "18362") -or ($winbuild -eq "18363")) {

    $hotfixid = "KB4528760"
}

Write-Output "$(Get-Date): Now we are going to check if the hotfix $hotfixid for your windows build $winbuild is installed..."
Write-Output "$(Get-Date):"

# Check if the Hotfix is installed
if (Get-HotFix | where-object HotfixID -eq $hotfixid) {

    Write-Output "$(Get-Date): Looking good. Seems $hotfixid is installed."
    Write-Output "$(Get-Date): Lets go ahead and check for some bad action (EventID 1) events..."

    # Get Event according to FAQ:
    # How can I tell is someone is attempting to use a forged certificate to exploit this vulnerability?
    # 1. After the applicable Windows update is applied, the system will generate Event ID 1 in the Event Viewer after each reboot under Windows Logs/Application when an attempt to exploit a known vulnerability ([CVE-2020-0601] cert validation) is detected.
    # 2. This Event is raised by a User mode process.
    $events = Get-EventLog -LogName Application -Source Audit-CVE -InstanceId 1 -ErrorAction SilentlyContinue
    
    If ($events) {

        # Count Events    
        $eventcount = ($events).Count
        Write-Output "$(Get-Date): Uh Oh we found $eventcount events:"
        # Show Events timestamp and username
        $events | select-object TimeGenerated,UserName
        
    } else {
        Write-Output "$(Get-Date): No EventID 1 entries found. Seems you're lucky."
    }

} else {

    Write-Output "$(Get-Date): Hotfix $hotfixid not found..."
    Write-Output "$(Get-Date): Please check the following site for the hotfixes:"
    Write-Output "$(Get-Date): https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0601"
}